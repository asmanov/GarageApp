@inject StorageService StorageService

<MudItem xs="12" sm="6" md="4" lg="3" style="margin: 3px; border-radius: 10px">
    <MudCard>
        <MudCardMedia ObjectFit="ObjectFit.ScaleDown" Height="400" Elevation="100"
        Class="rounded-lg ma-2" Image=@Equipment.Image>

        </MudCardMedia>
        <MudCardContent>
            <MudText Typo="Typo.h4"><b>@Equipment.RegistrationNumber</b></MudText>
            <MudText Typo="Typo.body2">Марка: <b>@Equipment.BrandName</b></MudText>
            <MudText Typo="Typo.body2">Модель: <b>@Equipment.ModelName</b></MudText>
            <MudText Typo="Typo.body2">Рік випуску: <b>@Equipment.Year</b></MudText>
            @if (Equipment.Euro != 0)
            {
                <MudText Typo="Typo.body2">Рівень екологічних норм: <b>@Equipment.Euro</b></MudText>
            }
            @if ((Equipment.Euro > 4 || Equipment.Euro == 0) && Equipment.GreenStart is null)
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="my-2">Зелена карта відсутня</MudAlert>
            }
            else if (Equipment.GreenEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).TotalDays < 7)
            {
                <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true" Class="my-2">Договір "Зелена карта" закінчується через @(Equipment.GreenEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).Days + 1) днів</MudAlert>
            }
            @if (Equipment.OsagoStart is null)
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="my-2">ОСЦПВ відсутнє</MudAlert>
            }
            else if (Equipment.OsagoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).TotalDays < 7)
            {
                <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true" Class="my-2">Договір ОСЦПВ закінчується через @(Equipment.OsagoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).Days + 1) днів</MudAlert>
            }
            @if (Equipment.KaskoStart is null)
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="my-2">КАСКО відсутня</MudAlert>
            }
            else if (Equipment.KaskoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).TotalDays < 7)
            {
                <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true" Class="my-2">Договір КАСКО закінчується через @(Equipment.KaskoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).Days + 1) днів</MudAlert>
            }
            @if (Equipment.TachoStart is null && Equipment.Euro > 0)
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="my-2">Адаптація тахографа</MudAlert>
            }
            else if (Equipment.TachoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).TotalDays < 7)
            {
                <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true" Class="my-2">Адаптацію тахографа провести @(Equipment.TachoEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).Days + 1) днів</MudAlert>
            }
            @if (Equipment.InspectionStart is null)
            {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="my-2">Треба провести техничну інспекцію</MudAlert>
            }
            else if (Equipment.InspectionEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).TotalDays < 7)
            {
                <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true" Class="my-2">Техничну інспекцію необхідно провести через @(Equipment.InspectionEnd?.ToDateTime(TimeOnly.MinValue).Subtract(DateTime.Now).Days + 1) днів</MudAlert>
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(async () => await OnSelected.InvokeAsync(Equipment))">Learn More</MudButton >
        </MudCardActions>
    </MudCard>
</MudItem>


@code {
    [Parameter, EditorRequired]
    public Equipment Equipment { get; set; } = default!;

    [Parameter]
    public EventCallback<Equipment> OnSelected { get; set; }
}
