@page "/"
@inject HttpClient Http
@inject DatabaseService DatabaseService
@inject ISnackbar Snackbar
@inject StorageService StorageService

<PageTitle>Home</PageTitle>
<EquipDetails Equipment="_selectedEquip" />

<MudItem>
    <EquipSearch/>
</MudItem>
<MudFlexBreak />


<MudGrid Justify="Justify.SpaceEvenly">

    @if (_equips == null)
    {
        <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" 
        Indeterminate="true" />
    }
    else
    {
        <ViewSwitcher>
            <GridTemplate>
                @foreach (var equip in _equips)
                {
                    <EquipCard Equipment="equip" OnSelected="HandleEquipSelected" />
                }
            </GridTemplate>
            <TableTemplete >
                <MudSimpleTable Hover="true" Striped="true" Dense="true" 
                    FixedHeader="true" 
                    Style="margin-top: 15px; margin-left: 5px; margin-right: 3px;">
                    <thead>
                        <tr>
                            <th>Держ.<br />номер</th>
                            <th>VIN</th>
                            <th>Марка</th>
                            <th>Модель</th>
                            <th>Год<br />выпуска</th>
                            <th>Класс<br />выбросов</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var equip in _equips)
                        {
                            <tr>
                                <td>  @equip.RegistrationNumber</td>
                                <td>@equip.Vin</td>
                                <td>@equip.BrandName</td>
                                <td>@equip.ModelName</td>
                                <td>@equip.Year</td>
                                <td>@equip.Euro</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </TableTemplete>
        </ViewSwitcher>   
    }
</MudGrid>



@code{
    private IEnumerable<Equipment>? _equips;
    private Equipment? _selectedEquip;

    protected override async Task OnInitializedAsync(){
        try
        {
            var response = await DatabaseService.FromS<Equipment>();

            _equips = Enumerable.Empty<Equipment>();

            foreach(Equipment item in response)
            {
                Equipment equip = new()
                    {
                        Id = item.Id,
                        RegistrationNumber = item.RegistrationNumber,
                        Year = item.Year,
                        Euro = item.Euro,
                        BrandName = item.BrandName,
                        ModelName = item.ModelName,
                        Image = (!string.IsNullOrEmpty(item.Image)) ? await StorageService.GetImageUrl("GarageImage", item.Image) : "https://place-hold.it/300x200/666/fff?text=Track",
                        Description = item.Description,
                        Vin = item.Vin,
                        VolumeFuelTank = item.VolumeFuelTank,
                        OsagoStart = item.OsagoStart,
                        OsagoEnd = item.OsagoEnd,
                        KaskoStart = item.KaskoStart,
                        GreenStart = item.GreenStart,
                        GreenEnd = item.GreenEnd,
                        TachoStart = item.TachoStart,
                        TachoEnd = item.TachoEnd,
                        InspectionStart = item.InspectionStart,
                        InspectionEnd = item.InspectionEnd
                    };
                _equips = _equips.Append<Equipment>(equip);
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem Loading equipment data: {ex.Message}");
        }
    }

    private void HandleEquipSelected(Equipment equipment) => _selectedEquip = equipment;


}