@page "/add-item"
@inject DatabaseService DatabaseService
@inject ISnackbar Snackbar
@inject StorageService StorageService

<PageTitle>Add model</PageTitle>

<MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>

<GarageForm @ref="_garageForm" OnSubmit="SubmitNewItem" />

@code {
    private readonly List<BreadcrumbItem> _items =
        [
        new("Home", href: "/GarageApp/", icon: Icons.Material.Filled.Home),
        new("Add item", href: null, disabled: true, icon: Icons.Material.Filled.Create)
    ];

    private GarageForm _garageForm = default!;

    private async Task SubmitNewItem(Garage item, IBrowserFile? image)
    {
        if(image is null)
        {
            item.Image = null;
        }

        var response = await DatabaseService.Insert<Garage>(item);

        if(response == null)
        {
            Snackbar.Add("Ошибка при добавлении записи");
            StateHasChanged();
            return;
        }

        if(image is null)
        {
            Snackbar.Add("Запись успешно добавлена");
            _garageForm.ResetForm();
            StateHasChanged();
            return;
        }

        var imageresponse = await ProcessImage(item.RegistrationNumber, image);

        if (imageresponse)
        {
            _garageForm.ResetForm();
        }

        StateHasChanged();
    }

    private async Task<bool> ProcessImage(string registrationNomber, IBrowserFile image)
    {
        var imageUploadResponse = await StorageService.UploadFile("GarageImage", image.OpenReadStream(), image.Name, registrationNomber);

        if (imageUploadResponse == null)
        {
            Snackbar.Add("Your trail was saved, but there was a problem uploading the image.");
            return false;
        }

        return true;
    }
}
