@page "/add-equipment"
@* @inject Mediator Mediator *@

<PageTitle>Add equipment to Garage</PageTitle>

@* Href="/GarageApp/" *@
<MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>
@if(_submitSuccessful){
    <MudAlert Severity="Severity.Success">Обладнання додане</MudAlert>
}
else if (_errorMessage is not null){
    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
}
<EditForm Model="_equipment" OnInvalidSubmit="SubmitForm">
    <FluentValidationValidator />
    <MudCard Style="margin-left: 20px; margin-right: 20px" Elevation="100">
        <MudCardHeader Typo="Typo.h1"><h3><b>Add a equipment</b></h3></MudCardHeader>
        <MudCardContent>
            <FormSection Title="Основные сведения об авто" HelpText="Додайте інформацію о марке, моделі, року виготовлення та VIN">
                <MudTextField Label="Марка" HelperText="" Variant="Variant.Outlined"
                @bind-Value="_equipment.BrandName" For="@(() => _equipment.BrandName)" />
                <ValidationMessage For="@(() => _equipment.BrandName)" />
                <MudTextField Label="Модель" Variant="Variant.Outlined"
                @bind-Value="_equipment.ModelName" For="@(() => _equipment.ModelName)" />
                <ValidationMessage For="@(() => _equipment.ModelName)" />
                <MudTextField Label="Ідентифікаційний номер ТЗ" Variant="Variant.Outlined"              
                @bind-Value="_equipment.Vin" For="@(() => _equipment.Vin)" />
                <ValidationMessage For="@(() => _equipment.Vin)" />
                <MudTextField Label="Рік випуску" Variant="Variant.Outlined"
                @bind-Value="_equipment.Year" For="@(() => _equipment.Year)" />
                <ValidationMessage For="@(() => _equipment.Year)" />
            </FormSection>
            <FormSection Title="Реєстраційні дані" HelpText="Додайте державний номер">
                <MudTextField Label="Державний номер" HelperText="" Variant="Variant.Outlined"
                @bind-Value="_equipment.Id" For="@(() => _equipment.Id)" />
                <ValidationMessage For="@(() => _equipment.Id)" />
            </FormSection>
            <FormSection Title="Додаткова інформація об авто" HelpText="Додайте інформацію про тип авто, пробіг та об'єм паливного бака">
                <MudTextField Label="Тип" HelperText="" Variant="Variant.Outlined"
                @bind-Value="_equipment.Description" For="@(() => _equipment.Description)" />
                <ValidationMessage For="@(() => _equipment.Description)" />
                <MudTextField Label="Об'єм паливного бака" HelperText="" Variant="Variant.Outlined"
                @bind-Value="_equipment.VolumeFuelTank" For="@(() => _equipment.VolumeFuelTank)" />
                <ValidationMessage For="@(() => _equipment.VolumeFuelTank)" />
                <MudTextField Label="Пробіг" HelperText="" Variant="Variant.Outlined"
                @bind-Value="_equipment.Mileage" For="@(() => _equipment.Mileage)" />
                <ValidationMessage For="@(() => _equipment.Mileage)" />
            </FormSection>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Reset" Variant="Variant.Filled" Color="Color.Error" OnClick="@(() => _equipment = new EquipmentDto())">Reset</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code{
    private List<BreadcrumbItem> _items =
    [
        new("Home", href: "/", icon: Icons.Material.Filled.Home),
    new("Add Equipment", href: null, disabled: true, icon: Icons.Material.Filled.Create)
    ];

    private EquipmentDto _equipment = new EquipmentDto();
    private bool _submitSuccessful;
    private string? _errorMessage;


    private async Task SubmitForm(){
        //var response = await Mediator.Send(new AddEquipmentRequest(_equipment));
        // if(response.Id == "fail"){
        //     _errorMessage = "Проблеми з збереженням нового обладнання";
        //     _submitSuccessful = false;
        //     return;
        // }

        _equipment = new EquipmentDto();
        _errorMessage = null;
        _submitSuccessful = true;
    }
}